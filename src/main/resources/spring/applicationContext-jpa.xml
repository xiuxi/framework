<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
						http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
						http://www.springframework.org/schema/cache 
						http://www.springframework.org/schema/cache/spring-cache-3.1.xsd 
						http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
						http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
						http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">
						
	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 开启IOC注解扫描（DAO） -->
	<!-- 1、扫描Spring Data JPA Dao -->
	<jpa:repositories base-package="com.framework.module.**.dao" entity-manager-factory-ref="entityManagerFactory" />
	<!-- 2、GeneralDao -->
	<bean class="com.framework.module.common.dao.impl.GeneralDaoJPAImpl" />
	
	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 数据库连接池 -->
	<!-- 1、Druid -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="url" value="${db.url}" />
		<property name="username" value="${db.username}" />
		<property name="password" value="${db.password}" />
	</bean>

	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 实体管理器工厂 -->
	<!-- Hibernate对JPA的实现 -->
	<bean id="hibernateJpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
	
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<!-- JDBC连接池 -->
		<property name="dataSource" ref="dataSource" />

		<!-- Entity实体类包路径 -->
		<property name="packagesToScan">
			<list>
				<value>com.framework.**.schema</value>
			</list>
		</property>

		<!-- JPA持久化实现类（Hibernate） -->
		<property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter" />

		<!-- JPA属性 -->
		<property name="jpaProperties">
			<props>
				<!-- 1、常用 -->
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				
				<!-- 2、缓存 -->
				<!-- 是否开启二级缓存 -->
				<prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}</prop>
				<!-- 二级缓存Provider类-->  
      			<prop key="hibernate.cache.provider_class">${hibernate.cache.provider_class}</prop>  
				<!-- 高速缓存提供程序 -->  
      			<prop key="hibernate.cache.region.factory_class">${hibernate.cache.region.factory_class}</prop>
      			<!-- 是否强制Hibernate以更人性化的格式将数据存入二级缓存 -->  
      			<prop key="hibernate.cache.use_structured_entries">${hibernate.cache.use_structured_entries}</prop>
				<!-- 缓存配置文件位置 -->  
      			<prop key="net.sf.ehcache.configurationResourceName">${net.sf.ehcache.configurationResourceName}</prop>
      			
      			<!-- 是否开启查询缓存 -->
      			<prop key="hibernate.cache.use_query_cache">${hibernate.cache.use_query_cache}</prop>
      
				<!-- 3、全文检索 -->
				<!-- 索引存储类型 -->
				<prop key="hibernate.search.default.directory_provider">${hibernate.search.default.directory_provider}</prop>
				<!-- 索引存储路径 -->
				<prop key="hibernate.search.default.indexBase">${hibernate.search.default.indexBase}</prop>
				<!-- 默认分词器 -->
				<prop key="hibernate.search.analyzer">${hibernate.search.analyzer}</prop>
			</props>
		</property>
	</bean>

	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 事务 -->
	<!-- JPA事务管理器  -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>
    <!-- 开启注解事务 -->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />

</beans>